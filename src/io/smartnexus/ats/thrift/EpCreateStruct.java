package io.smartnexus.ats.thrift;

import java.util.ArrayList;
import java.util.BitSet;
import java.util.Collections;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;
import org.apache.thrift.scheme.TupleScheme;
/**
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
@SuppressWarnings({ "cast", "rawtypes", "serial", "unchecked" })
/**
 * Data structure associated with dynamic endpoint creation
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2018-08-30")
public class EpCreateStruct implements org.apache.thrift.TBase<EpCreateStruct, EpCreateStruct._Fields>,
		java.io.Serializable, Cloneable, Comparable<EpCreateStruct> {
	private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(
			"EpCreateStruct");

	private static final org.apache.thrift.protocol.TField RET_FIELD_DESC = new org.apache.thrift.protocol.TField("Ret",
			org.apache.thrift.protocol.TType.I32, (short) 1);
	private static final org.apache.thrift.protocol.TField EP_CREATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField(
			"Ep_create_id", org.apache.thrift.protocol.TType.I32, (short) 2);

	private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
	static {
		schemes.put(StandardScheme.class, new EpCreateStructStandardSchemeFactory());
		schemes.put(TupleScheme.class, new EpCreateStructTupleSchemeFactory());
	}

	/**
	 * Result/Status of dynamic endpoint creation operation
	 * 
	 * @see Result
	 */
	public Result Ret; // required
	/**
	 * Local Endpoint ID of newly created dynamic endpoint
	 */
	public int Ep_create_id; // required

	/**
	 * The set of fields this struct contains, along with convenience methods
	 * for finding and manipulating them.
	 */
	public enum _Fields implements org.apache.thrift.TFieldIdEnum {
		/**
		 * Result/Status of dynamic endpoint creation operation
		 * 
		 * @see Result
		 */
		RET((short) 1, "Ret"),
		/**
		 * Local Endpoint ID of newly created dynamic endpoint
		 */
		EP_CREATE_ID((short) 2, "Ep_create_id");

		private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

		static {
			for (_Fields field : EnumSet.allOf(_Fields.class)) {
				byName.put(field.getFieldName(), field);
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, or null if its not
		 * found.
		 */
		public static _Fields findByThriftId(int fieldId) {
			switch (fieldId) {
			case 1: // RET
				return RET;
			case 2: // EP_CREATE_ID
				return EP_CREATE_ID;
			default:
				return null;
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, throwing an exception
		 * if it is not found.
		 */
		public static _Fields findByThriftIdOrThrow(int fieldId) {
			_Fields fields = findByThriftId(fieldId);
			if (fields == null)
				throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
			return fields;
		}

		/**
		 * Find the _Fields constant that matches name, or null if its not
		 * found.
		 */
		public static _Fields findByName(String name) {
			return byName.get(name);
		}

		private final short _thriftId;
		private final String _fieldName;

		_Fields(short thriftId, String fieldName) {
			_thriftId = thriftId;
			_fieldName = fieldName;
		}

		public short getThriftFieldId() {
			return _thriftId;
		}

		public String getFieldName() {
			return _fieldName;
		}
	}

	// isset id assignments
	private static final int __EP_CREATE_ID_ISSET_ID = 0;
	private byte __isset_bitfield = 0;
	public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
	static {
		Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(
				_Fields.class);
		tmpMap.put(_Fields.RET, new org.apache.thrift.meta_data.FieldMetaData("Ret",
				org.apache.thrift.TFieldRequirementType.DEFAULT,
				new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, Result.class)));
		tmpMap.put(_Fields.EP_CREATE_ID,
				new org.apache.thrift.meta_data.FieldMetaData("Ep_create_id",
						org.apache.thrift.TFieldRequirementType.DEFAULT,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
		metaDataMap = Collections.unmodifiableMap(tmpMap);
		org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(EpCreateStruct.class, metaDataMap);
	}

	public EpCreateStruct() {
	}

	public EpCreateStruct(Result Ret, int Ep_create_id) {
		this();
		this.Ret = Ret;
		this.Ep_create_id = Ep_create_id;
		setEp_create_idIsSet(true);
	}

	/**
	 * Performs a deep copy on <i>other</i>.
	 */
	public EpCreateStruct(EpCreateStruct other) {
		__isset_bitfield = other.__isset_bitfield;
		if (other.isSetRet()) {
			this.Ret = other.Ret;
		}
		this.Ep_create_id = other.Ep_create_id;
	}

	public EpCreateStruct deepCopy() {
		return new EpCreateStruct(this);
	}

	@Override
	public void clear() {
		this.Ret = null;
		setEp_create_idIsSet(false);
		this.Ep_create_id = 0;
	}

	/**
	 * Result/Status of dynamic endpoint creation operation
	 * 
	 * @see Result
	 */
	public Result getRet() {
		return this.Ret;
	}

	/**
	 * Result/Status of dynamic endpoint creation operation
	 * 
	 * @see Result
	 */
	public EpCreateStruct setRet(Result Ret) {
		this.Ret = Ret;
		return this;
	}

	public void unsetRet() {
		this.Ret = null;
	}

	/**
	 * Returns true if field Ret is set (has been assigned a value) and false
	 * otherwise
	 */
	public boolean isSetRet() {
		return this.Ret != null;
	}

	public void setRetIsSet(boolean value) {
		if (!value) {
			this.Ret = null;
		}
	}

	/**
	 * Local Endpoint ID of newly created dynamic endpoint
	 */
	public int getEp_create_id() {
		return this.Ep_create_id;
	}

	/**
	 * Local Endpoint ID of newly created dynamic endpoint
	 */
	public EpCreateStruct setEp_create_id(int Ep_create_id) {
		this.Ep_create_id = Ep_create_id;
		setEp_create_idIsSet(true);
		return this;
	}

	public void unsetEp_create_id() {
		__isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EP_CREATE_ID_ISSET_ID);
	}

	/**
	 * Returns true if field Ep_create_id is set (has been assigned a value) and
	 * false otherwise
	 */
	public boolean isSetEp_create_id() {
		return EncodingUtils.testBit(__isset_bitfield, __EP_CREATE_ID_ISSET_ID);
	}

	public void setEp_create_idIsSet(boolean value) {
		__isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EP_CREATE_ID_ISSET_ID, value);
	}

	public void setFieldValue(_Fields field, Object value) {
		switch (field) {
		case RET:
			if (value == null) {
				unsetRet();
			} else {
				setRet((Result) value);
			}
			break;

		case EP_CREATE_ID:
			if (value == null) {
				unsetEp_create_id();
			} else {
				setEp_create_id((Integer) value);
			}
			break;

		}
	}

	public Object getFieldValue(_Fields field) {
		switch (field) {
		case RET:
			return getRet();

		case EP_CREATE_ID:
			return getEp_create_id();

		}
		throw new IllegalStateException();
	}

	/**
	 * Returns true if field corresponding to fieldID is set (has been assigned
	 * a value) and false otherwise
	 */
	public boolean isSet(_Fields field) {
		if (field == null) {
			throw new IllegalArgumentException();
		}

		switch (field) {
		case RET:
			return isSetRet();
		case EP_CREATE_ID:
			return isSetEp_create_id();
		}
		throw new IllegalStateException();
	}

	@Override
	public boolean equals(Object that) {
		if (that == null)
			return false;
		if (that instanceof EpCreateStruct)
			return this.equals((EpCreateStruct) that);
		return false;
	}

	public boolean equals(EpCreateStruct that) {
		if (that == null)
			return false;

		boolean this_present_Ret = true && this.isSetRet();
		boolean that_present_Ret = true && that.isSetRet();
		if (this_present_Ret || that_present_Ret) {
			if (!(this_present_Ret && that_present_Ret))
				return false;
			if (!this.Ret.equals(that.Ret))
				return false;
		}

		boolean this_present_Ep_create_id = true;
		boolean that_present_Ep_create_id = true;
		if (this_present_Ep_create_id || that_present_Ep_create_id) {
			if (!(this_present_Ep_create_id && that_present_Ep_create_id))
				return false;
			if (this.Ep_create_id != that.Ep_create_id)
				return false;
		}

		return true;
	}

	@Override
	public int hashCode() {
		List<Object> list = new ArrayList<Object>();

		boolean present_Ret = true && (isSetRet());
		list.add(present_Ret);
		if (present_Ret)
			list.add(Ret.getValue());

		boolean present_Ep_create_id = true;
		list.add(present_Ep_create_id);
		if (present_Ep_create_id)
			list.add(Ep_create_id);

		return list.hashCode();
	}

	@Override
	public int compareTo(EpCreateStruct other) {
		if (!getClass().equals(other.getClass())) {
			return getClass().getName().compareTo(other.getClass().getName());
		}

		int lastComparison = 0;

		lastComparison = Boolean.valueOf(isSetRet()).compareTo(other.isSetRet());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetRet()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Ret, other.Ret);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = Boolean.valueOf(isSetEp_create_id()).compareTo(other.isSetEp_create_id());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetEp_create_id()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Ep_create_id, other.Ep_create_id);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		return 0;
	}

	public _Fields fieldForId(int fieldId) {
		return _Fields.findByThriftId(fieldId);
	}

	public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
		schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
	}

	public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
		schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("EpCreateStruct(");
		boolean first = true;

		sb.append("Ret:");
		if (this.Ret == null) {
			sb.append("null");
		} else {
			sb.append(this.Ret);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("Ep_create_id:");
		sb.append(this.Ep_create_id);
		first = false;
		sb.append(")");
		return sb.toString();
	}

	public void validate() throws org.apache.thrift.TException {
		// check for required fields
		// check for sub-struct validity
	}

	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
		try {
			write(new org.apache.thrift.protocol.TCompactProtocol(
					new org.apache.thrift.transport.TIOStreamTransport(out)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
		try {
			// it doesn't seem like you should have to do this, but java
			// serialization is wacky, and doesn't call the default constructor.
			__isset_bitfield = 0;
			read(new org.apache.thrift.protocol.TCompactProtocol(
					new org.apache.thrift.transport.TIOStreamTransport(in)));
		} catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private static class EpCreateStructStandardSchemeFactory implements SchemeFactory {
		public EpCreateStructStandardScheme getScheme() {
			return new EpCreateStructStandardScheme();
		}
	}

	private static class EpCreateStructStandardScheme extends StandardScheme<EpCreateStruct> {

		public void read(org.apache.thrift.protocol.TProtocol iprot, EpCreateStruct struct)
				throws org.apache.thrift.TException {
			org.apache.thrift.protocol.TField schemeField;
			iprot.readStructBegin();
			while (true) {
				schemeField = iprot.readFieldBegin();
				if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
					break;
				}
				switch (schemeField.id) {
				case 1: // RET
					if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
						struct.Ret = Result.findByValue(iprot.readI32());
						struct.setRetIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 2: // EP_CREATE_ID
					if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
						struct.Ep_create_id = iprot.readI32();
						struct.setEp_create_idIsSet(true);
					} else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				default:
					org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
				}
				iprot.readFieldEnd();
			}
			iprot.readStructEnd();

			// check for required fields of primitive type, which can't be
			// checked in the validate method
			struct.validate();
		}

		public void write(org.apache.thrift.protocol.TProtocol oprot, EpCreateStruct struct)
				throws org.apache.thrift.TException {
			struct.validate();

			oprot.writeStructBegin(STRUCT_DESC);
			if (struct.Ret != null) {
				oprot.writeFieldBegin(RET_FIELD_DESC);
				oprot.writeI32(struct.Ret.getValue());
				oprot.writeFieldEnd();
			}
			oprot.writeFieldBegin(EP_CREATE_ID_FIELD_DESC);
			oprot.writeI32(struct.Ep_create_id);
			oprot.writeFieldEnd();
			oprot.writeFieldStop();
			oprot.writeStructEnd();
		}

	}

	private static class EpCreateStructTupleSchemeFactory implements SchemeFactory {
		public EpCreateStructTupleScheme getScheme() {
			return new EpCreateStructTupleScheme();
		}
	}

	private static class EpCreateStructTupleScheme extends TupleScheme<EpCreateStruct> {

		@Override
		public void write(org.apache.thrift.protocol.TProtocol prot, EpCreateStruct struct)
				throws org.apache.thrift.TException {
			TTupleProtocol oprot = (TTupleProtocol) prot;
			BitSet optionals = new BitSet();
			if (struct.isSetRet()) {
				optionals.set(0);
			}
			if (struct.isSetEp_create_id()) {
				optionals.set(1);
			}
			oprot.writeBitSet(optionals, 2);
			if (struct.isSetRet()) {
				oprot.writeI32(struct.Ret.getValue());
			}
			if (struct.isSetEp_create_id()) {
				oprot.writeI32(struct.Ep_create_id);
			}
		}

		@Override
		public void read(org.apache.thrift.protocol.TProtocol prot, EpCreateStruct struct)
				throws org.apache.thrift.TException {
			TTupleProtocol iprot = (TTupleProtocol) prot;
			BitSet incoming = iprot.readBitSet(2);
			if (incoming.get(0)) {
				struct.Ret = Result.findByValue(iprot.readI32());
				struct.setRetIsSet(true);
			}
			if (incoming.get(1)) {
				struct.Ep_create_id = iprot.readI32();
				struct.setEp_create_idIsSet(true);
			}
		}
	}

}
